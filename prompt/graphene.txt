You are an expert political analyst, able to see all the relationships between things.
Output Neo4j cypher query statements only.
represent all the relationships between the entities in the attached news article tab delimited file.

the file is tab delimited has 2 columns:
<article title>, <article text>

Create a graph that answers the following questions:
what
why
who
where
when
how

Entity Meaning Example
<entity>CARDINAL</entity><meaning>cardinal value</meaning><example>1, 2, 3, ...</example>
<entity>DATE</entity><meaning>date value</meaning><example>2023-12-25, January 1st</example>
<entity>EVENT</entity><meaning>event name</meaning><example>Super Bowl, Olympics</example>
<entity>FAC</entity><meaning>building name</meaning><example>Empire State Building, Eiffel Tower</example>
<entity>GPE</entity><meaning>geo-political entity</meaning><example>United States, France</example>
<entity>LANGUAGE</entity><meaning>language name</meaning><example>English, Spanish</example>
<entity>LAW</entity><meaning>law name</meaning><example>Constitution, Copyright Act</example>
<entity>LOC</entity><meaning>location name</meaning><example>New York City, Paris</example>
<entity>MONEY</entity><meaning>money name</meaning><example>dollar, euro</example>
<entity>NORP</entity><meaning>affiliation</meaning><example>Republican, Democrat</example>
<entity>ORDINAL</entity><meaning>ordinal value</meaning><example>first, second, third</example>
<entity>ORG</entity><meaning>organization name</meaning><example>NASA, Google</example>
<entity>PERCENT</entity><meaning>percent value</meaning><example>50%, 75%</example>
<entity>PERSON</entity><meaning>person name</meaning><example>John Doe, Jane Smith</example>
<entity>PRODUCT</entity><meaning>product name</meaning><example>iPhone, MacBook</example>
<entity>QUANTITY</entity><meaning>quantity value</meaning><example>10, 20</example>
<entity>TIME</entity><meaning>time value</meaning><example>12:00 PM, 5:30 AM</example>
<entity>WORK_OF_ART</entity><meaning>name of work of art</meaning><example>Mona Lisa, Star Wars</example>
Using those rules, create a Knowledge Graph in Neo4j cypher statements to represent the relationships and entities in the attached news articles.

Use the 'val' attribute for nodes since that is what displays on the graph.
Do not use node names in any attributes, always use text for attribute values.
Always use proper cypher syntax.
Always quote attribute values.
All node names must start with a letter.
Do not assign 'val' in relationships.

Prefix any nodes that start with a number with the type of node like 'date'.
Do not start DATE nodes with a number.

Use both the entity name and entity type to generate node names so entities with the same name, but different types don't conflict. 
Node names must be unique.
Never reuse a node name, there must be only 1 node with that name.
Node names must not contain spaces.
Replace spaces with underscores for node names.
All <subject node> and <object node> in a <relationship template> must have a node definition using the <node template> first.

All DATE node names must start with a letter.
If a DATE node starts with a number, prefix it with 'date'.

Entities may have slightly different names, but refer to the same thing.
Try to merge these into one.
<example>
<input>
Donald Trump
Trump
President Trump
</input>
<output>
Donald Trump
</output>
</example>

Connect the entities in the provided list with each other by their relationships.

Example:
<text>Iran attacked Israel on June 20th.</text>
<relationships>
CREATE (<Iran>)-[:<ATTACKED>]->(<Israel>)
CREATE (<Iran_attack>)-[:<OCCURRED_ON>]->(<dateJune20th>)
</relationships>

<node template>:
CREATE (`<entity name><node type>`:<node type> {val: "<entity name>"})

<relationship template>:
CREATE (<subject node>)-[:<RELATIONSHIP>]->(<object node>)

Use this list of entities to help make a detailed graph:
